# Generated by Django 4.0.5 on 2022-10-28 11:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FileNameProcessed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename_weekly', models.CharField(max_length=150, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Fleet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('fees', models.DecimalField(decimal_places=2, default=0, max_digits=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='UberTransactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_uuid', models.UUIDField(unique=True)),
                ('driver_uuid', models.UUIDField()),
                ('driver_name', models.CharField(max_length=50)),
                ('driver_second_name', models.CharField(max_length=50)),
                ('trip_uuid', models.UUIDField()),
                ('trip_description', models.CharField(max_length=50)),
                ('organization_name', models.CharField(max_length=50)),
                ('organization_nickname', models.CharField(max_length=50)),
                ('transaction_time', models.CharField(max_length=50)),
                ('paid_to_you', models.DecimalField(decimal_places=2, max_digits=10)),
                ('your_earnings', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cash', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fare', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fare2', models.DecimalField(decimal_places=2, max_digits=10)),
                ('service_tax', models.DecimalField(decimal_places=2, max_digits=10)),
                ('wait_time', models.DecimalField(decimal_places=2, max_digits=10)),
                ('transfered_to_bank', models.DecimalField(decimal_places=2, max_digits=10)),
                ('peak_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tips', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cancel_payment', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, null=True)),
                ('second_name', models.CharField(max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone_number', models.CharField(blank=True, max_length=13)),
                ('chat_id', models.CharField(blank=True, max_length=9)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('licence_plate', models.CharField(max_length=24)),
                ('vin_code', models.CharField(max_length=17)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.AlterField(
            model_name='boltpaymentsorder',
            name='mobile_number',
            field=models.CharField(max_length=24),
        ),
        migrations.CreateModel(
            name='BoltFleet',
            fields=[
                ('fleet_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.fleet')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.fleet',),
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.user')),
                ('role', models.CharField(choices=[('CLIENT', 'Client'), ('PARTNER', 'Partner'), ('DRIVER', 'Driver'), ('DRIVER_MANAGER', 'Driver manager'), ('SERVICE_STATION_MANAGER', 'Service station manager'), ('SUPPORT_MANAGER', 'Support manager')], default='CLIENT', max_length=40)),
            ],
            bases=('app.user',),
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.user')),
                ('role', models.CharField(choices=[('CLIENT', 'Client'), ('PARTNER', 'Partner'), ('DRIVER', 'Driver'), ('DRIVER_MANAGER', 'Driver manager'), ('SERVICE_STATION_MANAGER', 'Service station manager'), ('SUPPORT_MANAGER', 'Support manager')], default='DRIVER', max_length=40)),
                ('driver_status', models.CharField(default='Offline', max_length=35)),
            ],
            bases=('app.user',),
        ),
        migrations.CreateModel(
            name='UberFleet',
            fields=[
                ('fleet_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.fleet')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.fleet',),
        ),
        migrations.CreateModel(
            name='UklonFleet',
            fields=[
                ('fleet_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.fleet')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.fleet',),
        ),
        migrations.CreateModel(
            name='BoltTransactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver_name', models.CharField(max_length=50)),
                ('driver_number', models.CharField(max_length=13)),
                ('trip_date', models.CharField(max_length=50)),
                ('payment_confirmed', models.CharField(max_length=50)),
                ('boarding', models.CharField(max_length=255)),
                ('payment_method', models.CharField(max_length=30)),
                ('requsted_time', models.CharField(max_length=5)),
                ('fare', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_authorization', models.DecimalField(decimal_places=2, max_digits=10)),
                ('service_tax', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cancel_payment', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tips', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order_status', models.CharField(max_length=50)),
                ('car', models.CharField(max_length=50)),
                ('license_plate', models.CharField(max_length=30)),
            ],
            options={
                'unique_together': {('driver_name', 'driver_number', 'trip_date', 'payment_confirmed', 'boarding')},
            },
        ),
        migrations.CreateModel(
            name='SupportManager',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.user')),
                ('role', models.CharField(choices=[('CLIENT', 'Client'), ('PARTNER', 'Partner'), ('DRIVER', 'Driver'), ('DRIVER_MANAGER', 'Driver manager'), ('SERVICE_STATION_MANAGER', 'Service station manager'), ('SUPPORT_MANAGER', 'Support manager')], default='SUPPORT_MANAGER', max_length=40)),
                ('client_id', models.ManyToManyField(to='app.client')),
                ('driver_id', models.ManyToManyField(to='app.driver')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_id_%(class)s_related', to='app.user')),
            ],
            bases=('app.user',),
        ),
        migrations.CreateModel(
            name='ServiceStationManager',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.user')),
                ('role', models.CharField(choices=[('CLIENT', 'Client'), ('PARTNER', 'Partner'), ('DRIVER', 'Driver'), ('DRIVER_MANAGER', 'Driver manager'), ('SERVICE_STATION_MANAGER', 'Service station manager'), ('SUPPORT_MANAGER', 'Support manager')], default='SERVICE_STATION_MANAGER', max_length=40)),
                ('driver_id', models.ManyToManyField(to='app.driver')),
                ('fleet_id', models.ManyToManyField(to='app.fleet')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_id_%(class)s_related', to='app.user')),
            ],
            bases=('app.user',),
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.user')),
                ('role', models.CharField(choices=[('CLIENT', 'Client'), ('PARTNER', 'Partner'), ('DRIVER', 'Driver'), ('DRIVER_MANAGER', 'Driver manager'), ('SERVICE_STATION_MANAGER', 'Service station manager'), ('SUPPORT_MANAGER', 'Support manager')], default='PARTNER', max_length=40)),
                ('driver_id', models.ManyToManyField(to='app.driver')),
                ('fleet_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.fleet')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_id_%(class)s_related', to='app.user')),
            ],
            bases=('app.user',),
        ),
        migrations.CreateModel(
            name='Fleets_drivers_vehicles_rate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver_external_id', models.CharField(max_length=255)),
                ('rate', models.DecimalField(decimal_places=2, default=0, max_digits=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('fleet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.fleet')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.vehicle')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.driver')),
            ],
        ),
        migrations.CreateModel(
            name='DriverManager',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.user')),
                ('role', models.CharField(choices=[('CLIENT', 'Client'), ('PARTNER', 'Partner'), ('DRIVER', 'Driver'), ('DRIVER_MANAGER', 'Driver manager'), ('SERVICE_STATION_MANAGER', 'Service station manager'), ('SUPPORT_MANAGER', 'Support manager')], default='DRIVER_MANAGER', max_length=40)),
                ('driver_id', models.ManyToManyField(to='app.driver')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_id_%(class)s_related', to='app.user')),
            ],
            bases=('app.user',),
        ),
        migrations.AddField(
            model_name='driver',
            name='driver_manager_id',
            field=models.ManyToManyField(null=True, to='app.drivermanager'),
        ),
        migrations.AddField(
            model_name='driver',
            name='fleet_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.fleet'),
        ),
        migrations.AddField(
            model_name='driver',
            name='partner_id',
            field=models.ManyToManyField(null=True, to='app.partner'),
        ),
        migrations.AddField(
            model_name='driver',
            name='user_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_id_%(class)s_related', to='app.user'),
        ),
        migrations.AddField(
            model_name='driver',
            name='vehicle_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.vehicle'),
        ),
        migrations.AddField(
            model_name='client',
            name='support_manager_id',
            field=models.ManyToManyField(to='app.supportmanager'),
        ),
        migrations.AddField(
            model_name='client',
            name='user_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_id_%(class)s_related', to='app.user'),
        ),
    ]
